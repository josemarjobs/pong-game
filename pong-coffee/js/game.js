// Generated by CoffeeScript 1.7.1
(function() {
  window.Game = (function() {
    Game.keys = {
      32: 'space',
      37: 'left',
      38: 'up',
      39: 'right',
      40: 'down'
    };

    function Game(canvas) {
      this.context = canvas.getContext("2d");
      this.width = canvas.width;
      this.height = canvas.height;
      this.keyPressed = {};
      this.entities = [];
      $(canvas).on('keydown keyup', (function(_this) {
        return function(e) {
          var keyName;
          keyName = Game.keys[e.which];
          if (keyName) {
            _this.keyPressed[keyName] = e.type === 'keydown';
            return e.preventDefault();
          }
        };
      })(this));
    }

    Game.prototype.addEntity = function(entity, name) {
      this.entities.push(entity);
      if (name) {
        return this[name] = entity;
      }
    };

    Game.prototype.start = function() {
      var fps, interval;
      fps = 60;
      interval = 1000 / fps;
      return setInterval((function(_this) {
        return function() {
          _this.update();
          return _this.draw();
        };
      })(this), interval);
    };

    Game.prototype.update = function() {
      var entity, _i, _len, _ref, _results;
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        if (entity.update) {
          _results.push(entity.update());
        }
      }
      return _results;
    };

    Game.prototype.draw = function() {
      var entity, _i, _len, _ref, _results;
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        if (entity.draw) {
          _results.push(entity.draw(this.context));
        }
      }
      return _results;
    };

    return Game;

  })();

}).call(this);
